diff --git a/node_modules/@typescript-eslint/utils/dist/ts-eslint/Rule.d.ts b/node_modules/@typescript-eslint/utils/dist/ts-eslint/Rule.d.ts
index 9a3a1fd..c6ed412 100644
--- a/node_modules/@typescript-eslint/utils/dist/ts-eslint/Rule.d.ts
+++ b/node_modules/@typescript-eslint/utils/dist/ts-eslint/Rule.d.ts
@@ -6,6 +6,10 @@ import type { Scope } from './Scope';
 import type { SourceCode } from './SourceCode';
 export type RuleRecommendation = 'error' | 'strict' | 'warn' | false;
 interface RuleMetaDataDocs {
+    /**
+     * The category the rule falls under
+     */
+    category?: string;
     /**
      * Concise description of the rule
      */
@@ -15,7 +19,7 @@ interface RuleMetaDataDocs {
      * Used by the build tools to generate the recommended and strict configs.
      * Set to false to not include it as a recommendation
      */
-    recommended: 'error' | 'strict' | 'warn' | false;
+    recommended?: 'error' | 'strict' | 'warn' | boolean;
     /**
      * The URL of the rule's docs
      */
diff --git a/node_modules/@typescript-eslint/utils/dist/ts-eslint/RuleTester.d.ts b/node_modules/@typescript-eslint/utils/dist/ts-eslint/RuleTester.d.ts
index c8afefe..d629d04 100644
--- a/node_modules/@typescript-eslint/utils/dist/ts-eslint/RuleTester.d.ts
+++ b/node_modules/@typescript-eslint/utils/dist/ts-eslint/RuleTester.d.ts
@@ -115,7 +115,7 @@ interface RunTests<TMessageIds extends string, TOptions extends Readonly<unknown
     readonly invalid: readonly InvalidTestCase<TMessageIds, TOptions>[];
 }
 interface RuleTesterConfig extends Linter.Config {
-    readonly parser: string;
+    readonly parser?: string;
     readonly parserOptions?: Readonly<ParserOptions>;
 }
 declare class RuleTesterBase {
